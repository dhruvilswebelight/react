{"ast":null,"code":"var _jsxFileName = \"/home/webelight-h-041/react/react/src/App.js\",\n    _s = $RefreshSig$();\n\n// import React, { createContext } from \"react\";\n// import ComA from \"./context/ComA\";\n// const FirstName = createContext();\n// const LastName = createContext();\n// const App = () => {\n//   return (\n//     <>\n//       <FirstName.Provider value={\"Dhruvil\"}>\n//         <LastName.Provider value={\"Suhagiya\"}>\n//           <ComA />\n//         </LastName.Provider>\n//       </FirstName.Provider>\n//     </>\n//   );\n// };\n// export default App;\n// export { FirstName, LastName };\n//combine context\n// import React, { createContext } from \"react\";\n// import ComA from \"./context/ComA\";\n// const user = {\n//   FirstName: \"Dhruvil\",\n//   LastName: \"Suhagiya\",\n// };\n// const fullName = createContext({ user });\n// const App = () => {\n//   return (\n//     <>\n//       <fullName.Provider value={user}>\n//         <ComA />\n//       </fullName.Provider>\n//     </>\n//   );\n// };\n// export default App;\n// export { fullName };\n// lifecycle method\n// import React from \"react\";\n// import Component from \"./lifecycleMethod\";\n// const App = () => {\n//   return <Component />;\n// };\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState();\n  const [nextTodoId, setNextTodoId] = useState(0);\n  const [newTodoLabel, setNewTodoLabel] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"https://gist.githubusercontent.com/witalewski/fc8f043d53a0d505f84c5ddb04ae76ea/raw/7c505bbc1675a0bc8a067f8b633b531c769bb64c/data.json\").then(_ref => {\n      let {\n        data\n      } = _ref;\n      setTodos(data);\n      setNextTodoId(data.length);\n    });\n  }, []);\n\n  const markTodoAsDone = (id, done) => setTodos(todos.map(todo => todo.id === id ? { ...todo,\n    done\n  } : todo));\n\n  const removeTodo = id => setTodos(todos.filter(todo => todo.id !== id));\n\n  const addNewTodo = () => {\n    setTodos([...todos, {\n      id: nextTodoId,\n      label: newTodoLabel,\n      done: false\n    }]);\n    setNextTodoId(nextTodoId + 1);\n    setNewTodoLabel(\"\");\n  };\n\n  return todos ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.done,\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return markTodoAsDone(todo.id, target.checked);\n          },\n          label: todo.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: todo.done ? \"done\" : \"\",\n          children: todo.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTodo(todo.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodoLabel,\n        onChange: _ref3 => {\n          let {\n            target\n          } = _ref3;\n          return setNewTodoLabel(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewTodo,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"5XuY4/zz8q5f+NC6sLDrGK/alTk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/webelight-h-041/react/react/src/App.js"],"names":["React","useState","useEffect","axios","App","todos","setTodos","nextTodoId","setNextTodoId","newTodoLabel","setNewTodoLabel","get","then","data","length","markTodoAsDone","id","done","map","todo","removeTodo","filter","addNewTodo","label","target","checked","value"],"mappings":"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","sourcesContent":["// import React, { createContext } from \"react\";\n// import ComA from \"./context/ComA\";\n\n// const FirstName = createContext();\n// const LastName = createContext();\n\n// const App = () => {\n//   return (\n//     <>\n//       <FirstName.Provider value={\"Dhruvil\"}>\n//         <LastName.Provider value={\"Suhagiya\"}>\n//           <ComA />\n//         </LastName.Provider>\n//       </FirstName.Provider>\n//     </>\n//   );\n// };\n\n// export default App;\n// export { FirstName, LastName };\n\n//combine context\n\n// import React, { createContext } from \"react\";\n// import ComA from \"./context/ComA\";\n\n// const user = {\n//   FirstName: \"Dhruvil\",\n//   LastName: \"Suhagiya\",\n// };\n// const fullName = createContext({ user });\n\n// const App = () => {\n//   return (\n//     <>\n//       <fullName.Provider value={user}>\n//         <ComA />\n//       </fullName.Provider>\n//     </>\n//   );\n// };\n\n// export default App;\n// export { fullName };\n\n// lifecycle method\n\n// import React from \"react\";\n// import Component from \"./lifecycleMethod\";\n\n// const App = () => {\n//   return <Component />;\n// };\n// export default App;\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n const App = () => {\n  const [todos, setTodos] = useState();\n  const [nextTodoId, setNextTodoId] = useState(0);\n  const [newTodoLabel, setNewTodoLabel] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://gist.githubusercontent.com/witalewski/fc8f043d53a0d505f84c5ddb04ae76ea/raw/7c505bbc1675a0bc8a067f8b633b531c769bb64c/data.json\"\n      )\n      .then(({ data }) => {\n        setTodos(data);\n        setNextTodoId(data.length);\n      });\n  }, []);\n\n  const markTodoAsDone = (id, done) =>\n    setTodos(todos.map(todo => (todo.id === id ? { ...todo, done } : todo)));\n\n  const removeTodo = id => setTodos(todos.filter(todo => todo.id !== id));\n\n  const addNewTodo = () => {\n    setTodos([\n      ...todos,\n      {\n        id: nextTodoId,\n        label: newTodoLabel,\n        done: false\n      }\n    ]);\n    setNextTodoId(nextTodoId + 1);\n    setNewTodoLabel(\"\");\n  };\n\n  return todos ? (\n    <div className=\"todo-list\">\n      <ul>\n        {todos.map(todo => (\n          <li key={todo.id}>\n            <input\n              type=\"checkbox\"\n              checked={todo.done}\n              onChange={({ target }) => markTodoAsDone(todo.id, target.checked)}\n              label={todo.label}\n            />\n            <span className={todo.done ? \"done\" : \"\"}>{todo.label}</span>\n            <button onClick={() => removeTodo(todo.id)}>X</button>\n          </li>\n        ))}\n      </ul>\n      <div className=\"new-todo\">\n        <input\n          type=\"text\"\n          value={newTodoLabel}\n          onChange={({ target }) => setNewTodoLabel(target.value)}\n        />\n        <button onClick={addNewTodo}>Add</button>\n      </div>\n    </div>\n  ) : (\n    <div>Loading...</div>\n  );\n};\nexport default App"]},"metadata":{},"sourceType":"module"}