{"ast":null,"code":"var _jsxFileName = \"/home/webelight-h-041/react/react/src/lifecycleMethod/counter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const [count, setCount] = useState(0); // componentDidMount\n  // useEffect(() => {\n  //   console.log(\"The use effect ran\");\n  // }, []);\n  //  componentDidUpdate\n  //   useEffect(() => {\n  //     console.log(\"The use effect ran\");\n  //   }, [count]);\n  // componentWillUnmount\n  //   useEffect(() => {\n  //     console.log(\"The use effect ran\");\n  //     return () => {\n  //       console.log(\"The Component has unmounted\");\n  //     };\n  //   }, []);\n\n  const [news, setNews] = useState([]);\n\n  const fetchNews = () => {\n    fetch(\"http://hn.algolia.com/api/v1/search?query=react\").then(result => result.json()).then(data => setNews(data.hits)).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    console.log(\"The Component has mounted\");\n    document.title = `You clicked ${count} times`;\n    return () => {\n      console.log(\"The Component has unmounted\");\n    };\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Counter \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" current count: \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increment the count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"LzOBVSGHk1P1cxdEDcwq5Ukr/iQ=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/home/webelight-h-041/react/react/src/lifecycleMethod/counter.js"],"names":["React","useState","useEffect","Counter","count","setCount","news","setNews","fetchNews","fetch","then","result","json","data","hits","catch","error","console","log","document","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC,CADoB,CAGpB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AACI,QAAMO,SAAS,GAAG,MAAM;AACpBC,IAAAA,KAAK,CAAC,iDAAD,CAAL,CACCC,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEMG,IAAI,IAAIN,OAAO,CAACM,IAAI,CAACC,IAAN,CAFrB,EAGCC,KAHD,CAGOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHhB;AAIH,GALD;;AAMJd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAC,IAAAA,QAAQ,CAACC,KAAT,GAAkB,eAAchB,KAAM,QAAtC;AACA,WAAO,MAAM;AACXa,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,KAFD;AAGD,GANQ,EAMN,CAACd,KAAD,CANM,CAAT;AAQA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,qCAAoBA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA1CD;;GAAMD,O;;KAAAA,O;AA4CN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n\n  // componentDidMount\n  // useEffect(() => {\n  //   console.log(\"The use effect ran\");\n  // }, []);\n\n  //  componentDidUpdate\n  //   useEffect(() => {\n  //     console.log(\"The use effect ran\");\n  //   }, [count]);\n\n  // componentWillUnmount\n  //   useEffect(() => {\n  //     console.log(\"The use effect ran\");\n  //     return () => {\n  //       console.log(\"The Component has unmounted\");\n  //     };\n  //   }, []);\n  const [news, setNews] = useState([]);\n      const fetchNews = () => {\n          fetch(\"http://hn.algolia.com/api/v1/search?query=react\")\n          .then(result => result.json())\n          .then(data => setNews(data.hits))\n          .catch(error => console.log(error));\n      }\n  useEffect(() => {\n    console.log(\"The Component has mounted\");\n    document.title = `You clicked ${count} times`;\n    return () => {\n      console.log(\"The Component has unmounted\");\n    };\n  }, [count]);\n\n  return (\n    <div>\n      <h1> Counter </h1>\n      <p> current count: {count} </p>\n      <button onClick={() => setCount(count + 1)}>Increment the count</button>\n    </div>\n  );\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}